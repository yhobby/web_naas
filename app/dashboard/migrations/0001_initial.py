# Generated by Django 3.1.2 on 2020-10-16 00:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AclInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('acl', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'acl_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BgpInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('vrf', models.CharField(max_length=200)),
                ('peer', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('version', models.IntegerField()),
                ('asn', models.IntegerField()),
                ('uptime', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('routes', models.IntegerField()),
                ('bfd', models.CharField(max_length=200)),
                ('route_limit', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'bgp_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardsInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('chassis', models.CharField(max_length=200)),
                ('slot', models.IntegerField()),
                ('type', models.CharField(max_length=200)),
                ('barcode', models.CharField(max_length=200)),
                ('board', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'boards_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceInfo',
            fields=[
                ('city', models.CharField(max_length=200)),
                ('vendor', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('tenant', models.CharField(max_length=200)),
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(primary_key=True, protocol='IPv4', serialize=False)),
                ('role', models.CharField(max_length=200)),
                ('model', models.CharField(max_length=200)),
                ('soft', models.CharField(max_length=200)),
                ('patch', models.CharField(max_length=200)),
                ('uptime', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'device_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LagInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('lag', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'lag_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortsInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('interface', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('mtu', models.IntegerField()),
                ('port_bw', models.CharField(max_length=200)),
                ('current_bw', models.CharField(max_length=200)),
                ('sfp_vendor', models.CharField(max_length=200)),
                ('sfp_dist', models.CharField(max_length=200)),
                ('sfp_mode', models.CharField(max_length=200)),
                ('port_mode', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ports_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VlanInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('vlan', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vlan_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VrfInfo',
            fields=[
                ('hostname', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('vrf_type', models.CharField(max_length=200)),
                ('vrf_name', models.CharField(max_length=200)),
                ('protocol', models.IntegerField()),
                ('rd', models.CharField(max_length=200)),
                ('rt_export', models.CharField(max_length=200)),
                ('rt_import', models.CharField(max_length=200)),
                ('diffserv', models.CharField(max_length=200)),
                ('ttl_mode', models.CharField(max_length=200)),
                ('uid', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vrf_info',
                'managed': False,
            },
        ),
    ]
